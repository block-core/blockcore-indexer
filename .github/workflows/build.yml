name: Build and Release Binaries

on: 
  push:
    branches:
      - master

jobs:
  
  build:

    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: windows-latest
            extension: ".zip"
            runtime: "win-x64"
          - os: ubuntu-latest
            extension: ".tar.gz"
            runtime: "linux-x64"
          - os: macos-latest
            runtime: "osx-x64"
            extension: ".zip"
        node_version: [12.x]
        dotnet_version: ['3.1.101']
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    env:
      PROJECT_NAME: 'Blockcore.Indexer'
      SOLUTION_PATH: 'Blockcore.Indexer.sln'
      PROJECT_PATH: 'src/Blockcore.Indexer/Blockcore.Indexer.csproj'
      CIRRUS_NAME: 'Blockcore.Indexer.Cirrus'
      CIRRUS_PATH: 'src/Blockcore.Indexer.Cirrus/Blockcore.Indexer.Cirrus.csproj'
      BUILD_CONFIGURATION: 'Release'

    steps:

    - uses: actions/checkout@v1
      name: Checkout

    - name: Setup Node.js (${{ matrix.node_version }})
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Variables
      run: |
        echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
      shell: bash

    # - name: Variables
    #   run: |
    #     echo "::set-env name=VERSION::$(npm run version --silent)"
    #     echo "::set-env name=RELEASE_CONFIGURATION::${{ matrix.runtime }}"

    # - name: Setup .NET Core (${{ matrix.dotnet_version }})
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: ${{ matrix.dotnet_version }}

    - name: Restore
      run: dotnet restore ${{env.SOLUTION_PATH}}

    # - name: Build
    #   run: dotnet build -c ${{env.BUILD_CONFIGURATION}} -r ${{env.RELEASE_CONFIGURATION}} /p:Version=${{ env.VERSION }} -v m ${{env.SOLUTION_PATH}}

    - name: Publish (Blockcore Indexer)
      run: dotnet publish -c ${{env.BUILD_CONFIGURATION}} -r ${{matrix.runtime}} /p:Version=${{ env.VERSION }} -v m -o ./src/${{ env.PROJECT_NAME }}/bin/publish ${{env.PROJECT_PATH}}

    - name: Publish (Cirrus Indexer)
      run: dotnet publish -c ${{env.BUILD_CONFIGURATION}} -r ${{matrix.runtime}} /p:Version=${{ env.VERSION }} -v m -o ./src/${{ env.CIRRUS_NAME }}/bin/publish ${{env.CIRRUS_PATH}}

    - name: Package Name
      run: |
        echo RELEASE_NAME=${{ env.PROJECT_NAME }}-${{ env.VERSION }}-${{ matrix.runtime }}${{ matrix.extension }} >> $GITHUB_ENV
        echo RELEASE_PATH=${{ env.PROJECT_NAME }}-${{ env.VERSION }}-${{ matrix.runtime }}${{ matrix.extension }} >> $GITHUB_ENV
        echo RELEASE_CIRRUS_NAME=${{ env.CIRRUS_NAME }}-${{ env.VERSION }}-${{ matrix.runtime }}${{ matrix.extension }} >> $GITHUB_ENV
        echo RELEASE_CIRRUS_PATH=${{ env.CIRRUS_NAME }}-${{ env.VERSION }}-${{ matrix.runtime }}${{ matrix.extension }} >> $GITHUB_ENV
      shell: bash

    - name: Package (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo RELEASE_PATH=./src/${{env.PROJECT_NAME}}/bin/publish/${{env.RELEASE_NAME}} >> $GITHUB_ENV
        cd ./src/${{env.PROJECT_NAME}}/bin/publish/
        tar cvzf ${{env.RELEASE_NAME}} *
        echo RELEASE_CIRRUS_PATH=./src/${{env.CIRRUS_NAME}}/bin/publish/${{env.RELEASE_CIRRUS_NAME}} >> $GITHUB_ENV
        cd ./src/${{env.CIRRUS_NAME}}/bin/publish/
        tar cvzf ${{env.RELEASE_CIRRUS_NAME}} *

    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path .\src\${{env.PROJECT_NAME}}\bin\publish\* -DestinationPath .\${{env.RELEASE_NAME}}
        Compress-Archive -Path .\src\${{env.CIRRUS_NAME}}\bin\publish\* -DestinationPath .\${{env.RELEASE_CIRRUS_NAME}}

    - name: Package (Mac)
      if: matrix.os == 'macos-latest'
      run: |
        zip -r ${{env.RELEASE_NAME}} ./src/${{env.PROJECT_NAME}}/bin/publish/
        zip -r ${{env.RELEASE_CIRRUS_NAME}} ./src/${{env.CIRRUS_NAME}}/bin/publish/

    #- run: mkdir -p path/to/artifact
    #- run: echo hello > path/to/artifact/world.txt

    - uses: actions/upload-artifact@v1
      with:
        name: blockcore-indexer
        path: "${{env.RELEASE_PATH}}"

    - uses: actions/upload-artifact@v1
      with:
        name: blockcore-cirrus-indexer
        path: "${{env.RELEASE_CIRRUS_PATH}}"

    - name: Release
      uses: sondreb/action-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: "${{env.RELEASE_PATH}};${{env.RELEASE_CIRRUS_PATH}}"
        draft: true
        prerelease: false
        body: ''
        name: "Blockcore Indexer (Release ${{env.VERSION}})"
        tag: ${{env.VERSION}}